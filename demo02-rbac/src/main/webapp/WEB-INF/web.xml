<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >
<web-app>
    <display-name>Archetype Created Web Application</display-name>
    <!-- 1.容器初始化参数，ContextLoadListener监听器创建的时候就会加载参数-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--加载spring容器的配置文件，以及和sprig整合的框架的配置文件-->
        <param-value>classpath:applicationContext.xml,classpath*:spring-shiro.xml,classpath*:spring-redis.xml
        </param-value>
    </context-param>
    <!--=============================================== filter start ================================================-->
    <!-- 2. 配置POST方式编码，解决前端POST提交参数的乱码问题-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!-- 3. 改变发送PUT和DELETE请求.-->
    <!--form表单直接使用method="POST"的方式提交，提交一个隐藏的input  <input type="hidden" name="_method" value="put" />-->
    <filter>
        <filter-name>httpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <!--4. 配置shiroFilter-->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!--2.1 拦截所有请求，在所有过滤器的前面-->
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--3.1 拦截改变请求方式-->
    <filter-mapping>
        <filter-name>httpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--4.1 shiroFilter映射-->
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--=============================================== filter end ================================================-->
    <!--=============================================== listener start ============================================-->
    <!--5. 配置Web监听器，通过第1步配置的容器参数创建spring ioc 容器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--6.自定义的监听器，用于设置全局应用名称，web中所有页面的路劲需要用到-->
    <listener>
        <listener-class>cn.yhs.learn.web.AppPathListener</listener-class>
    </listener>
    <!--7.配置监听器，加载RequestContextListener,创建HttpServletRequest,AOP切面日志需要用到-->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <!--=============================================== listener end ==============================================-->
    <!--=============================================== servlet start =============================================-->
    <!--8.配置前端控制转发器，并创建Spring webmvc容器-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <!--5.1改变启动顺序，tomcat启动的时候就创建-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--9.配置druid的监控页面-->
    <!--配置Druid的内置监控页面，Druid内置提供了一个StatViewServlet用于展示Druid的统计信息。
        这个StatViewServlet的用途包括：提供监控信息展示的html页面，提供监控信息的JSON API-->
    <!-- 配置 Druid 监控信息显示页面 -->
    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
        <init-param>
            <!-- 允许清空统计数据 -->
            <param-name>resetEnable</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <!-- 用户名 -->
            <param-name>loginUsername</param-name>
            <param-value>admin</param-value>
        </init-param>
        <init-param>
            <!-- 密码 -->
            <param-name>loginPassword</param-name>
            <param-value>admin</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--=============================================== servlet end ===============================================-->
    <!-- 6. 配置首页-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
</web-app>
